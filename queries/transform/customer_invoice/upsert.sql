merge into production.star."Customer Invoice" using (
    select 'Esser' as "Business Unit"
        , stg.$30 as "Carrier"
        , to_timestamp_ntz(stg.$17 || ' ' || stg.$18) as "Create Date"
        , stg.$36 as "Credit Terms"
        , cu."Name" as "Currency"
        , stg.$23 as "Customer Number"
        , stg.$22 as "Customer PO"
        , nullif(split_part(stg.$6, ';', 1), '') as "Customer SKU"
        , iff(stg.$49 = 'G', -1, 1) * stg.$9::number(38, 2) * iff(stg.$8::boolean = true, stg.$11 * stg.$10, 1) * stg.$24 as "Extended Price"
        , initcap(stg.$33) as "Incoterms"
        , stg.$21 as "Invoice Date"
        , stg.$19 as "Invoice Number"
        , ifnull(l."Name", stg.$20) as "Language"
        , stg.$4 as "Line Number"
        , stg.$50 as "Line Sequence"
        , o."Line Number" as "Order Line"
        , o."Order Number" as "Order Number"
        , stg.$7 as "Quantity"
        , o."Quote Line" as "Quote Line"
        , o."Quote Number" as "Quote Number"
        , stg.$3 as "Reference Number"
        , nullif(trim(concat_ws(' ', ifnull(stg.$44, ''), ifnull(stg.$45, '')), ' '), '') as "Salesperson"
        , stg.$27::number(38, 0)::varchar(10) as "Ship To Number"
        , stg.$5 as "SKU"
        , iff(stg.$49 = 'G', -1, 1) * stg.$9::number(38, 2) * iff(stg.$8::boolean = true, stg.$11 * stg.$10, 1) * stg.$24 / iff(stg.$7 = 0, 1, stg.$7) as "Unit Price"
    from <<FILENAME>> as stg
        left join helper.iso."Currency" as cu
            on cu."Alphabetic Code" = 'EUR'
        left join helper.iso."Language" as l
            on case
                when stg.$20 = 'D' then 'DE'
                when stg.$20 = 'E' then 'EN'
                else null
            end = l."Alpha-2 Code"
        left join production.star."Customer Order" as o
            on stg.$47 = o."Reference Number"
            and stg.$48 = o."Line Number"
            and stg.$46 = 'U'
) as bucket
    on production.star."Customer Invoice"."Invoice Number" = bucket."Invoice Number"
    and production.star."Customer Invoice"."Line Number" = bucket."Line Number"
    and production.star."Customer Invoice"."Line Sequence" = bucket."Line Sequence"
when not matched then insert (
    "Business Unit"
    , "Carrier"
    , "Create Date"
    , "Credit Terms"
    , "Currency"
    , "Customer Number"
    , "Customer PO"
    , "Customer SKU"
    , "Extended Price"
    , "Incoterms"
    , "Invoice Date"
    , "Invoice Number"
    , "Key"
    , "Language"
    , "Line Number"
    , "Line Sequence"
    , "Order Line"
    , "Order Number"
    , "Quantity"
    , "Quote Line"
    , "Quote Number"
    , "Reference Number"
    , "Salesperson"
    , "Ship To Number"
    , "SKU"
    , "Unit Price"
) values (
    bucket."Business Unit"
    , bucket."Carrier"
    , bucket."Create Date"
    , bucket."Credit Terms"
    , bucket."Currency"
    , bucket."Customer Number"
    , bucket."Customer PO"
    , bucket."Customer SKU"
    , bucket."Extended Price"
    , bucket."Incoterms"
    , bucket."Invoice Date"
    , bucket."Invoice Number"
    , production.star."Customer Invoice Key".nextval
    , bucket."Language"
    , bucket."Line Number"
    , bucket."Line Sequence"
    , bucket."Order Line"
    , bucket."Order Number"
    , bucket."Quantity"
    , bucket."Quote Line"
    , bucket."Quote Number"
    , bucket."Reference Number"
    , bucket."Salesperson"
    , bucket."Ship To Number"
    , bucket."SKU"
    , bucket."Unit Price"
);