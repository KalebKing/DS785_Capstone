# Welcome to your prefect.yaml file! You can use this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: Data-Warehouse
prefect-version: 2.19.2

# build section allows you to manage and build docker images
build: null

# push section allows you to manage if and how this project is uploaded to remote locations
push: null

# pull section allows you to provide instructions for cloning this project in remote locations
pull:
- prefect.deployments.steps.git_clone:
    repository: https://github.com/Esser-Werke/Data-Warehouse
    branch: main
    access_token: '{{ prefect.blocks.secret.esser-data-warehouse-repo-token
      }}'

# the deployments section allows you to provide configuration for deploying flows
deployments:
- name: proalpha-to-snowflake-pipeline
  version: null
  tags: []
  description: null
  entrypoint: src/main.py:elt_flow
  parameters: {
    "source_credentials": "esser-openedge-production-connection-string"
    , "target_credentials": "esser-snowflake-prefect"
    , "stage_name": "proALPHA"
    , "data_objects": [
      "gl_account"
      , "customer"
      , "product"
      , "vendor"
      , "ship_to"
    ]
    , "local_filesystem": "esser-data-warehouse-local-files"
  }
  work_pool:
    name: esser-worker-pool
    work_queue_name: default
    job_variables: {}
  schedules:
  - cron: 0 6-18 * * 1-5
    timezone: Europe/Berlin
    day_or: true
    active: true
- name: proalpha-helper-tables
  version: null
  tags: []
  description: null
  entrypoint: src/main.py:elt_flow
  parameters: {
    "source_credentials": "esser-openedge-production-connection-string"
    , "target_credentials": "esser-snowflake-prefect"
    , "stage_name": "proALPHA"
    , "data_objects": [
      "sa_wertkopf"
      , "sa_wert"
    ]
    , "local_filesystem": "esser-data-warehouse-local-files"
  }
  work_pool:
    name: esser-worker-pool
    work_queue_name: default
    job_variables: {}
  schedules:
  - cron: 0 0 * * 1-5
    timezone: Europe/Berlin
    day_or: true
    active: true
